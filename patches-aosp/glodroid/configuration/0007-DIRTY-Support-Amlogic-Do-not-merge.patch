From cded3a8251e5507a1e41a66e498465fa8ea02f48 Mon Sep 17 00:00:00 2001
From: Roman Stratiienko <r.stratiienko@gmail.com>
Date: Sun, 30 Apr 2023 17:51:53 +0300
Subject: [PATCH 7/9] DIRTY: Support Amlogic (Do not merge)

Signed-off-by: Roman Stratiienko <r.stratiienko@gmail.com>
---
 platform/common/amlogic/amlogic_defconfig |  4 +-
 platform/common/amlogic/uboot-emmc.config |  1 -
 platform/common/amlogic/uboot-sd.config   |  1 -
 platform/tools/gensdimg.sh                | 33 ++++++++-----
 platform/tools/move_gpt.py                | 59 +++++++++++++++++++++++
 platform/tools/tools.mk                   |  3 ++
 platform/uboot/bootscript.cpp             | 11 ++---
 platform/uboot/uboot.mk                   |  4 +-
 8 files changed, 91 insertions(+), 25 deletions(-)
 delete mode 100644 platform/common/amlogic/uboot-emmc.config
 delete mode 100644 platform/common/amlogic/uboot-sd.config
 create mode 100755 platform/tools/move_gpt.py

diff --git a/platform/common/amlogic/amlogic_defconfig b/platform/common/amlogic/amlogic_defconfig
index 2089a20..52a3a16 100644
--- a/platform/common/amlogic/amlogic_defconfig
+++ b/platform/common/amlogic/amlogic_defconfig
@@ -2456,7 +2456,7 @@ CONFIG_DVB_HORUS3A=m
 CONFIG_DVB_ASCOT2E=m
 CONFIG_DVB_HELENE=m
 CONFIG_DVB_DUMMY_FE=m
-CONFIG_DRM=m
+CONFIG_DRM=y
 CONFIG_DRM_DP_CEC=y
 CONFIG_DRM_I2C_CH7006=m
 CONFIG_DRM_I2C_SIL164=m
@@ -2546,7 +2546,7 @@ CONFIG_DRM_ANALOGIX_ANX78XX=m
 CONFIG_DRM_ANALOGIX_ANX7625=m
 CONFIG_DRM_CDNS_MHDP8546=m
 CONFIG_DRM_HISI_KIRIN=m
-CONFIG_DRM_MESON=m
+CONFIG_DRM_MESON=y
 CONFIG_DRM_BOCHS=m
 CONFIG_DRM_GM12U320=m
 CONFIG_DRM_SIMPLEDRM=m
diff --git a/platform/common/amlogic/uboot-emmc.config b/platform/common/amlogic/uboot-emmc.config
deleted file mode 100644
index d511943..0000000
--- a/platform/common/amlogic/uboot-emmc.config
+++ /dev/null
@@ -1 +0,0 @@
-CONFIG_FASTBOOT_FLASH_MMC_DEV=2
diff --git a/platform/common/amlogic/uboot-sd.config b/platform/common/amlogic/uboot-sd.config
deleted file mode 100644
index 3e6db24..0000000
--- a/platform/common/amlogic/uboot-sd.config
+++ /dev/null
@@ -1 +0,0 @@
-CONFIG_FASTBOOT_FLASH_MMC_DEV=1
diff --git a/platform/tools/gensdimg.sh b/platform/tools/gensdimg.sh
index c422d7c..4eb5db0 100755
--- a/platform/tools/gensdimg.sh
+++ b/platform/tools/gensdimg.sh
@@ -81,7 +81,6 @@ gen_sd() {
     prepare_disk $(( 1024 * 4 )) # Default size - 4 GB
 
     echo "===> Add partitions"
-    add_part       bootloader      bootloader-sd.img
     add_part       uboot-env       env.img
     add_empty_part misc                                  $(( 512 * 1024 ))
     add_part       boot_a          boot.img        $(( 64 * 1024 * 1024 ))
@@ -98,9 +97,11 @@ gen_sd() {
     add_empty_part metadata                        $(( 16 * 1024 * 1024 ))
     add_empty_part userdata_placeholder -
 
-    if [ "$PLATFORM" = "broadcom" ]; then
-        modify_for_rpi
-    fi
+    # Move main GPT to 2MB offset
+    ./move_gpt.py $SDIMG 4096
+
+    # bootloader-sd.img contains some sort of MBR and must be written to LBA0
+    dd if=bootloader-sd.img of=$SDIMG bs=512 skip=1 seek=1 conv=notrunc
 }
 
 gen_deploy() {
@@ -108,16 +109,18 @@ gen_deploy() {
     prepare_disk $(( 256 )) # Default size - 256 MB
 
     echo "===> Add partitions"
-    if [ "$PLATFORM" = "rockchip" ] && [ "$SUFFIX" == "emmc" ]; then
-        add_part bootloader bootloader-deploy-emmc.img
-    else
-        add_part bootloader bootloader-$SUFFIX.img
-    fi
     add_part uboot-env env.img
     add_part recovery_boot boot.img
 
-    if [ "$PLATFORM" = "broadcom" ]; then
-        modify_for_rpi
+    # Move main GPT to 2MB offset
+    ./move_gpt.py $SDIMG 4096
+
+    if [ "$SUFFIX" = "emmc" ]; then
+        # Write emmc bootloader to LBA1
+        dd if=bootloader-emmc.img of=$SDIMG bs=512 seek=1 conv=notrunc
+    else
+        # bootloader-sd.img contains some sort of MBR and must be written to LBA0
+        dd if=bootloader-sd.img of=$SDIMG bs=512 skip=1 seek=1 conv=notrunc
     fi
 }
 
@@ -146,6 +149,14 @@ if [ "$PLATFORM" = "rockchip" ]; then
     PTR=$PART_START
 fi
 
+if [ "$PLATFORM" = "amlogic" ]; then
+    # Amlogic boot ROM looks for the SPL binary starting from 1st LBA of SDCARD and EMMC.
+    # Therefore we need to locate primary GPT somewhere else. Choose 2MB offset.
+    # Start from 3MB to avoid overlap with the bootloader and GPT.
+    PART_START=$(( 3 * 1024 * 1024 ))
+    PTR=$PART_START
+fi
+
 if [[ -n $1 ]]; then
     SDIMG=$1
 else
diff --git a/platform/tools/move_gpt.py b/platform/tools/move_gpt.py
new file mode 100755
index 0000000..bd81492
--- /dev/null
+++ b/platform/tools/move_gpt.py
@@ -0,0 +1,59 @@
+#!/usr/bin/env python3
+
+# chatgpt/CPT4-generated code
+
+import sys
+import struct
+import zlib
+
+GPT_HEADER_FORMAT = "<8sIIIIQQQQ16sQIII"
+
+def shift_gpt_table(disk_image, offset):
+    with open(disk_image, "rb+") as f:
+        # Read the protective MBR
+        f.seek(0)
+        mbr = f.read(512)
+
+        # Read the original GPT header
+        f.seek(512)
+        gpt_header_data = f.read(92)
+        gpt_header = struct.unpack(GPT_HEADER_FORMAT, gpt_header_data)
+
+        # Unpack the GPT header fields
+        signature, revision, header_size, crc32, reserved, current_lba, backup_lba, first_usable_lba, last_usable_lba, disk_guid, part_entry_start_lba, num_part_entries, part_entry_size, part_entry_array_crc32 = gpt_header
+
+        # Move the GPT header to the new offset
+        f.seek(offset * 512)
+        f.write(gpt_header_data)
+
+        # Update the GPT header's current LBA and recalculate the CRC32
+        current_lba = offset
+        part_entry_start_lba = offset + 1
+        gpt_header = (signature, revision, header_size, 0, reserved, current_lba, backup_lba, first_usable_lba, last_usable_lba, disk_guid, part_entry_start_lba, num_part_entries, part_entry_size, part_entry_array_crc32)
+        gpt_header_data = struct.pack(GPT_HEADER_FORMAT, *gpt_header)
+        crc32 = zlib.crc32(gpt_header_data) & 0xffffffff
+        gpt_header = (signature, revision, header_size, crc32, reserved, current_lba, backup_lba, first_usable_lba, last_usable_lba, disk_guid, part_entry_start_lba, num_part_entries, part_entry_size, part_entry_array_crc32)
+        gpt_header_data = struct.pack(GPT_HEADER_FORMAT, *gpt_header)
+
+        # Write the updated GPT header back to the new offset
+        f.seek(offset * 512)
+        f.write(gpt_header_data)
+
+        # Copy the GPT entries to the new offset
+        f.seek(1024)
+        gpt_entries_data = f.read(num_part_entries * part_entry_size)
+        f.seek(offset * 512 + 512)
+        f.write(gpt_entries_data)
+
+
+    print(f"Primary GPT table shifted to offset {offset}.")
+
+if __name__ == "__main__":
+    if len(sys.argv) < 3:
+        print("Usage: python shift_gpt.py <disk_image> <offset>")
+        sys.exit(1)
+
+    disk_image = sys.argv[1]
+    offset = int(sys.argv[2])
+
+    shift_gpt_table(disk_image, offset)
diff --git a/platform/tools/tools.mk b/platform/tools/tools.mk
index c14607f..9f49178 100644
--- a/platform/tools/tools.mk
+++ b/platform/tools/tools.mk
@@ -46,10 +46,12 @@ $(PRODUCT_OUT)/flash-emmc.sh: $(PLATFORM_PATH)/tools/flash-all.sh
 	sed -i "s/__SUFFIX__/-emmc/g" $@
 
 $(PRODUCT_OUT)/deploy-sd.img: $(GENSDIMG) $(DEPLOY_BOOTLOADER) $(PRODUCT_OUT)/boot.img
+	cp $(dir $(GENSDIMG))/move_gpt.py $(PRODUCT_OUT)
 	rm -f $@
 	$(NATIVE_PATH) $< -C=$(PRODUCT_OUT) -T=DEPLOY-SD -P=$(PRODUCT_BOARD_PLATFORM) $(notdir $@)
 
 $(PRODUCT_OUT)/deploy-sd-for-emmc.img: $(GENSDIMG) $(DEPLOY_BOOTLOADER) $(PRODUCT_OUT)/boot.img
+	cp $(dir $(GENSDIMG))/move_gpt.py $(PRODUCT_OUT)
 	rm -f $@
 	$(NATIVE_PATH) $< -C=$(PRODUCT_OUT) -T=DEPLOY-SD-FOR-EMMC -P=$(PRODUCT_BOARD_PLATFORM) $(notdir $@)
 
@@ -58,6 +60,7 @@ $(PRODUCT_OUT)/deploy-gpt.img: $(PRODUCT_OUT)/deploy-sd.img $(GENSDIMG)
 
 $(PRODUCT_OUT)/sdcard.img: $(GENSDIMG) $(DEPLOY_FILES)
 	$(call pretty,"Creating sdcard image...")
+	cp $(dir $(GENSDIMG))/move_gpt.py $(PRODUCT_OUT)
 	rm -f $@
 	$(NATIVE_PATH) $< -C=$(PRODUCT_OUT) -T=SD -P=$(PRODUCT_BOARD_PLATFORM)
 
diff --git a/platform/uboot/bootscript.cpp b/platform/uboot/bootscript.cpp
index f419d65..5991b2c 100644
--- a/platform/uboot/bootscript.cpp
+++ b/platform/uboot/bootscript.cpp
@@ -22,12 +22,7 @@ setenv overlay_fdt_id 0xFFF
 /* EMMC cards have 512k erase block size. Align partitions accordingly to avoid issues with erasing. */
 
 setenv partitions "uuid_disk=\${uuid_gpt_disk}"
-#ifdef BOOTLOADER_PARTITION_OVERRIDE
-BOOTLOADER_PARTITION_OVERRIDE()
-#else
-EXTENV(partitions, ";name=bootloader,start=128K,size=130944K,uuid=\${uuid_gpt_bootloader}")
-#endif
-EXTENV(partitions, ";name=uboot-env,size=512K,uuid=\${uuid_gpt_reserved}")
+EXTENV(partitions, ";name=uboot-env,start=3M,size=512K,uuid=\${uuid_gpt_reserved}")
 EXTENV(partitions, ";name=misc,size=512K,uuid=\${uuid_gpt_misc}")
 EXTENV(partitions, ";name=boot_a,size=64M,uuid=\${uuid_gpt_boot_a}")
 EXTENV(partitions, ";name=boot_b,size=64M,uuid=\${uuid_gpt_boot_b}")
@@ -46,7 +41,7 @@ EXTENV(partitions, ";name=userdata,size=-,uuid=\${uuid_gpt_userdata}")
 setenv bootargs " init=/init rootwait ro androidboot.boottime=223.708 androidboot.selinux=permissive"
 EXTENV(bootargs, " androidboot.revision=1.0 androidboot.board_id=0x1234567 androidboot.serialno=${serial#}")
 EXTENV(bootargs, " firmware_class.path=/vendor/etc/firmware")
-EXTENV(bootargs, " ${debug_bootargs} printk.devkmsg=on")
+EXTENV(bootargs, " ${debug_bootargs} printk.devkmsg=on gpt")
 
 FUNC_BEGIN(enter_fastboot)
 #ifdef PRE_ENTER_FASTBOOT
@@ -108,7 +103,7 @@ FUNC_END()
 
 FUNC_BEGIN(bootcmd_prepare_env)
  setenv bootdevice_path STRESC(__SYSFS_MMC0_PATH__);
- if test STRESC(${mmc_bootdev}) = STRESC(1);
+ if test STRESC(${mmc_bootdev}) = STRESC(2);
  then
   setenv bootdevice_path STRESC(__SYSFS_MMC1_PATH__);
  fi;
diff --git a/platform/uboot/uboot.mk b/platform/uboot/uboot.mk
index 917c14c..b75439f 100644
--- a/platform/uboot/uboot.mk
+++ b/platform/uboot/uboot.mk
@@ -91,8 +91,8 @@ endif
 
 ifeq ($(PRODUCT_BOARD_PLATFORM),amlogic)
 UBOOT_FRAGMENTS	+= glodroid/configuration/platform/common/amlogic/uboot.config
-UBOOT_FRAGMENT_EMMC := $(UBOOT_OUT)/amlogic/uboot-emmc.config
-UBOOT_FRAGMENT_SD := $(UBOOT_OUT)/amlogic/uboot-sd.config
+UBOOT_EMMC_DEV_INDEX := 2
+UBOOT_SD_DEV_INDEX := 1
 POST_PROCESS_SCRIPT := glodroid/configuration/platform/common/amlogic/post-process-bootloader.sh
 UBOOT_BINARY := $(UBOOT_OUT)/u-boot.bin
 endif
-- 
2.39.2

